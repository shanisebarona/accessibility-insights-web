// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`TabStopsTestingContent renders 1`] = `
<React.Fragment>
  <StyledToggleBase
    checked={true}
    className="toggle"
    data-automation-id="tab-stops-toggle"
    label="Show tab stops"
    offText="Off"
    onClick={[Function]}
    onText="On"
  />
  <span
    aria-level={2}
    role="heading"
  >
    <strong>
      How to test:
    </strong>
  </span>
  <ol
    className="howToTestList"
  >
    <li>
      In your target app, navigate to the screen you want to test.
    </li>
    <li>
      Turn on the 
      <strong>
        Show tab stops
      </strong>
       toggle. An empty circle will highlight the element in the target app that currently has input focus.
    </li>
    <li>
      If you're testing on a virtual device, switch to the emulator app by clicking it or by pressing 
      <strong>
        Alt+Tab
      </strong>
       (Windows or Linux) or
       
      <strong>
        Command+Tab
      </strong>
       (Mac).
    </li>
    <li>
      Use the virtual keyboard to the right (or a physical keyboard) to:
      <ul
        className="discStyleType"
      >
        <li>
          Navigate linearly through all the interactive elements using only the 
          <strong>
            Tab
          </strong>
           key.
        </li>
        <li>
          Navigate to each interactive element and then use the arrow keys to navigate away in each direction (up/down/left/right).
        </li>
      </ul>
    </li>
    <li>
      As you navigate to each element, look for these
       
      <strong>
        accessibility problems
      </strong>
      :
      <ul
        className="discStyleType"
      >
        <li>
          An interactive element can't be reached using the
           
          <strong>
            Tab
          </strong>
           and arrow keys.
        </li>
        <li>
          An interactive element "traps" input focus and prevents navigating away.
        </li>
        <li>
          An interactive element doesn't give a visible indication when it has input focus.
        </li>
        <li>
          The navigation order is inconsistent with the logical order that's communicated visually.
        </li>
        <li>
          Input focus moves unexpectedly without the user initiating it.
        </li>
      </ul>
    </li>
  </ol>
</React.Fragment>
`;
